@tailwind base;
@tailwind components;
@tailwind utilities;

@font-face {
  font-family: "VT323";
  src: url("https://fonts.googleapis.com/css2?family=VT323&display=swap");
  font-display: swap;
}

:root {
  --foreground-rgb: 0, 0, 0;
  --background-rgb: 0, 0, 0;
}

#content {
  font-size: 1.125rem; /* 18px, 3 points larger than default 16px */
}

#content h1 {
  font-size: xx-large;
}

#content h2 {
  @apply py-4;
}
#content p {
  @apply py-1;
}

#content p code {
  @apply bg-black;
}

#content img {
  @apply object-scale-down max-h-full drop-shadow-md rounded-md m-auto;
}

body {
  color: rgb(var(--foreground-rgb));
  background: rgb(var(--background-rgb));
  font-family: "VT323", monospace;
}

/* Much more pronounced scanlines */
.bg-scanline {
  background: linear-gradient(
    to bottom,
    rgba(0, 0, 0, 0.8) 50%,
    rgba(255, 255, 255, 0.1) 50%
  );
  background-size: 100% 4px;
  pointer-events: none;
}

.bg-crt-glow {
  background: radial-gradient(
    ellipse at center,
    rgba(100, 100, 100, 0.05) 0%,
    rgba(0, 0, 0, 0.2) 80%,
    rgba(0, 0, 0, 0.4) 100%
  );
  pointer-events: none;
}

.glow {
  text-shadow: 0 0 5px rgba(245, 158, 11, 0.7);
}

/* Global CRT effects that can be applied anywhere */
.crt-effects {
  position: relative;
}

.crt-effects::before {
  content: "";
  position: fixed;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background: linear-gradient(
    to bottom,
    rgba(0, 0, 0, 0.8) 50%,
    rgba(255, 255, 255, 0.1) 50%
  );
  background-size: 100% 4px;
  opacity: 0.3;
  pointer-events: none;
  z-index: 50;
}

.crt-effects::after {
  content: "";
  position: fixed;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background: radial-gradient(
    ellipse at center,
    rgba(100, 100, 100, 0.05) 0%,
    rgba(0, 0, 0, 0.2) 80%,
    rgba(0, 0, 0, 0.4) 100%
  );
  pointer-events: none;
  z-index: 40;
}

/* Local scanlines for specific elements */
.local-scanlines {
  position: relative;
}

.local-scanlines::before {
  content: "";
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background: linear-gradient(
    to bottom,
    rgba(0, 0, 0, 0.8) 50%,
    rgba(255, 255, 255, 0.1) 50%
  );
  background-size: 100% 4px;
  opacity: 0.4;
  pointer-events: none;
  z-index: 1;
}

/* RTS UI Elements */
.rts-panel {
  @apply relative border-2 border-amber-900/80 bg-black/80 overflow-hidden;
  box-shadow: inset 1px 1px 0 rgba(255, 255, 255, 0.2),
    inset -1px -1px 0 rgba(0, 0, 0, 0.8), 0 0 5px rgba(245, 158, 11, 0.3);
}

.rts-panel-header {
  @apply bg-gradient-to-r from-amber-900/80 to-amber-800/60 border-b-2 border-amber-900/80;
  box-shadow: 0 1px 0 rgba(255, 255, 255, 0.1);
}

.rts-panel-inner {
  @apply bg-black/60;
  background-image: repeating-linear-gradient(
    45deg,
    rgba(30, 30, 30, 0.1),
    rgba(30, 30, 30, 0.1) 10px,
    rgba(10, 10, 10, 0.1) 10px,
    rgba(10, 10, 10, 0.1) 20px
  );
}

.rts-button {
  @apply relative text-amber-400 bg-gradient-to-b from-amber-900/60 to-amber-950/80 border-2 border-amber-800/80 hover:from-amber-800/60 hover:to-amber-900/80 transition-all;
  box-shadow: inset 1px 1px 0 rgba(255, 255, 255, 0.2),
    inset -1px -1px 0 rgba(0, 0, 0, 0.8);
}

.rts-button:active {
  @apply bg-gradient-to-b from-amber-950/80 to-amber-900/60;
  transform: translateY(1px);
  box-shadow: inset -1px -1px 0 rgba(255, 255, 255, 0.1),
    inset 1px 1px 0 rgba(0, 0, 0, 0.8);
}

.rts-button-small {
  @apply rts-button text-xs;
}

.rts-button-square {
  @apply rts-button flex items-center justify-center;
}

.rts-screen {
  @apply relative border-2 border-amber-900/80 bg-black/60 overflow-hidden;
  box-shadow: inset 0 0 10px rgba(0, 0, 0, 0.8), 0 0 5px rgba(245, 158, 11, 0.3);
}

.rts-resource-bar {
  @apply rts-panel p-2 mb-4;
}

.rts-resource {
  @apply bg-gradient-to-r from-amber-950/80 to-amber-900/60 border border-amber-800/60 px-2 py-1;
  box-shadow: inset 1px 1px 0 rgba(255, 255, 255, 0.1),
    inset -1px -1px 0 rgba(0, 0, 0, 0.6);
}

.rts-resource-icon {
  @apply bg-black/40 border border-amber-900/60 rounded-sm;
}

/* Syntax highlighting styles for code blocks */
#content pre {
  @apply bg-black text-white p-4 rounded-md overflow-x-auto my-4;
  font-family: "Fira Code", "Monaco", "Cascadia Code", "Roboto Mono", monospace;
}

#content pre code {
  @apply bg-transparent text-white;
  display: block;
  padding: 0;
}

#content code {
  @apply bg-black text-white px-1 py-0.5 rounded text-sm;
  font-family: "Fira Code", "Monaco", "Cascadia Code", "Roboto Mono", monospace;
}

/* Highlight.js theme for Go syntax highlighting */
.hljs {
  background: #000000 !important;
  color: #ffffff !important;
}

.hljs-comment,
.hljs-quote {
  color: #7c7c7c;
  font-style: italic;
}

.hljs-keyword,
.hljs-selector-tag,
.hljs-subst {
  color: #ff79c6;
  font-weight: bold;
}

.hljs-number,
.hljs-literal,
.hljs-variable,
.hljs-template-variable,
.hljs-tag .hljs-attr {
  color: #bd93f9;
}

.hljs-string,
.hljs-doctag {
  color: #f1fa8c;
}

.hljs-title,
.hljs-section,
.hljs-selector-id {
  color: #50fa7b;
  font-weight: bold;
}

.hljs-type,
.hljs-class .hljs-title {
  color: #8be9fd;
}

.hljs-tag,
.hljs-name,
.hljs-attribute {
  color: #ff79c6;
}

.hljs-regexp,
.hljs-link {
  color: #f1fa8c;
}

.hljs-symbol,
.hljs-bullet {
  color: #ff79c6;
}

.hljs-built_in,
.hljs-builtin-name {
  color: #8be9fd;
}

.hljs-meta {
  color: #6272a4;
}

.hljs-deletion {
  background: #ff5555;
}

.hljs-addition {
  background: #50fa7b;
}

.hljs-emphasis {
  font-style: italic;
}

.hljs-strong {
  font-weight: bold;
}

/* Go-specific syntax highlighting */
.hljs-function {
  color: #50fa7b;
}

.hljs-params {
  color: #ffb86c;
}
